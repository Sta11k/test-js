{"version":3,"sources":["components/Timer/Timer.jsx","App.jsx","index.jsx"],"names":["Timer","useState","seconds","setSeconds","status","setStatus","count","setCount","useEffect","unsubscribe$","Subject","interval","pipe","takeUntil","subscribe","next","complete","count$","Observable","timer","debounceTime","HendleClick","e","target","name","className","Date","toISOString","slice","value","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAIe,SAASA,IACtB,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,QAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAGAC,qBAAU,WACR,IAAMC,EAAe,IAAIC,IAQzB,OAPAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACM,UAAXV,GACFD,GAAW,kBAAMD,EAAU,UAG1B,WACLO,EAAaM,OACbN,EAAaO,cAEd,CAACd,EAASE,IAEbI,qBAAU,WACR,IAAMS,EAAS,IAAIC,IACnBC,YAAM,KACHP,KAAKC,YAAUI,IACfH,WAAU,WAMT,OALc,IAAVR,EACFD,EAAU,QAEVE,EAAS,GAEJ,WACLa,YAAa,KACbH,EAAOF,OAEPE,EAAOD,SAASX,EAAU,eAG/B,CAACC,EAAOF,IAEX,IAAMiB,EAAc,SAAAC,GAElB,OADiBA,EAAEC,OAAXC,MAEN,IAAK,QACHnB,EAAU,SACV,MAEF,IAAK,OACHA,EAAU,QACVF,EAAW,GACX,MAEF,IAAK,OACHI,GAAS,kBAAMD,EAAQ,KACvB,MAEF,IAAK,QACHH,EAAW,GACXE,EAAU,SAEV,MACF,QACE,SAwBN,OACE,sBAAKoB,UAAU,YAAf,UACE,qCAAQ,IAAIC,KAAKxB,GAASyB,cAAcC,MAAM,GAAI,OAClD,qBAAIH,UAAU,SAAd,UACE,oBAAIA,UAAU,eAAd,SACE,wBAAQD,KAAK,QAAQK,MAvFhB,GAuF6BC,QAAST,EAA3C,6BAIF,oBAAII,UAAU,eAAd,SACE,wBAAQD,KAAK,OAAOK,MA5Ff,GA4F4BC,QAAST,EAA1C,4BAiBF,oBAAII,UAAU,eAAd,SACE,wBAAQD,KAAK,OAAOK,MA9Gf,GA8G4BC,QAAST,EAA1C,4BAIF,oBAAII,UAAU,eAAd,SACE,wBAAQD,KAAK,QAAQK,MAnHhB,GAmH6BC,QAAST,EAA3C,mCCrHK,SAASU,IACtB,OACE,qBAAKN,UAAU,MAAf,SACE,cAACzB,EAAD,MCDNgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.a9767e3b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { interval, Observable, Subject, timer } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\n\nexport default function Timer() {\n  const [seconds, setSeconds] = useState(0);\n  const [status, setStatus] = useState('stop');\n  const [count, setCount] = useState(0);\n  const name = '';\n\n  useEffect(() => {\n    const unsubscribe$ = new Subject();\n    interval(1000)\n      .pipe(takeUntil(unsubscribe$))\n      .subscribe(() => {\n        if (status === 'start') {\n          setSeconds(() => seconds + 1000);\n        }\n      });\n    return () => {\n      unsubscribe$.next();\n      unsubscribe$.complete();\n    };\n  }, [seconds, status]);\n\n  useEffect(() => {\n    const count$ = new Observable();\n    timer(300)\n      .pipe(takeUntil(count$))\n      .subscribe(() => {\n        if (count === 2) {\n          setStatus('wait');\n        } else {\n          setCount(0);\n        }\n        return () => {\n          debounceTime(300);\n          count$.next();\n\n          count$.complete(setStatus('stop'));\n        };\n      });\n  }, [count, status]);\n\n  const HendleClick = e => {\n    const { name } = e.target;\n    switch (name) {\n      case 'start':\n        setStatus('start');\n        break;\n\n      case 'stop':\n        setStatus('stop');\n        setSeconds(0);\n        break;\n\n      case 'wait':\n        setCount(() => count + 1);\n        break;\n\n      case 'reset':\n        setSeconds(0);\n        setStatus('start');\n\n        break;\n      default:\n        return;\n    }\n  };\n\n  // const HendleStartTimer = e => {\n  //   e.preventDefault();\n\n  //   setStatus('start');\n  // };\n\n  // const HendleStopTimer = e => {\n  //   setStatus('stop');\n  //   setSeconds(0);\n  // };\n\n  // const HendleResetTimer = e => {\n  //   setSeconds(0);\n  //   setStatus('start');\n  // };\n\n  // const HendleWaitTimer = e => {\n  //   setCount(() => count + 1);\n  // };\n\n  return (\n    <div className=\"container\">\n      <span> {new Date(seconds).toISOString().slice(11, 19)}</span>\n      <ul className=\"button\">\n        <li className=\"button__item\">\n          <button name=\"start\" value={name} onClick={HendleClick}>\n            «Start»\n          </button>\n        </li>\n        <li className=\"button__item\">\n          <button name=\"stop\" value={name} onClick={HendleClick}>\n            «Stop»\n          </button>\n        </li>\n\n        {/* <li className=\"button__item\">\n          {status === 'stop' ? (\n            <button name=\"start\" onClick={HendleStartTimer}>\n              «Start»\n            </button>\n          ) : (\n            <button name=\"stop\" onClick={HendleStopTimer}>\n              «Stop»\n            </button>\n          )}\n        \n        </li> */}\n        <li className=\"button__item\">\n          <button name=\"wait\" value={name} onClick={HendleClick}>\n            «Wait»\n          </button>\n        </li>\n        <li className=\"button__item\">\n          <button name=\"reset\" value={name} onClick={HendleClick}>\n            «Reset»\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import './styles.css';\n// import { useState, useEffect } from 'react';\n// import toast, { Toaster } from 'react-hot-toast';\n\nimport Timer from './components/Timer/Timer';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Timer />\n    </div>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\n// import '../src/styles.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}